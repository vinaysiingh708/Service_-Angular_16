{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { EventEmitter, Injectable } from \"@angular/core\";\nimport { User } from \"../Models/User\";\nlet UserService = class UserService {\n  constructor(logger) {\n    this.logger = logger;\n    this.users = [new User('Steve Smith', 'Male', 'Monthly', 'Active'), new User('Mary Jone', 'Female', 'Yearly', 'InActive'), new User('Mark Tyler', 'Male', 'Quarterly', 'Active')];\n    this.OnUserDetailsClicked = new EventEmitter();\n  }\n  OnShowUserdetails(user) {\n    this.OnUserDetailsClicked.emit(user);\n  }\n  GetAllUsers() {\n    return this.users;\n  }\n  CreateUser(name, gender, subType, status) {\n    let user = new User(name, gender, subType, status);\n    this.users.push(user);\n    // let logger= new LoggerServive();\n    this.logger.LogMessage(name, status);\n  }\n};\nUserService = __decorate([Injectable()], UserService);\nexport { UserService };","map":{"version":3,"names":["EventEmitter","Injectable","User","UserService","constructor","logger","users","OnUserDetailsClicked","OnShowUserdetails","user","emit","GetAllUsers","CreateUser","name","gender","subType","status","push","LogMessage","__decorate"],"sources":["D:\\Angular Course syllabus by Vinay\\angular-16-complete-course-main\\08-angular-services-dependency-injection\\start\\src\\app\\Services\\user.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { LoggerServive } from 'src/app/Services/user.service\r\nimport { User } from \"../Models/User\";\r\n\r\n@Injectable()\r\nexport class UserService{\r\n    users: User[]= [\r\n        new User('Steve Smith','Male','Monthly','Active'),\r\n        new User('Mary Jone','Female','Yearly','InActive'),\r\n        new User('Mark Tyler','Male','Quarterly','Active'),\r\n    ];\r\n\r\n    constructor(private logger: LoggerServive){}\r\n\r\n    OnUserDetailsClicked: EventEmitter<User> = new EventEmitter<User>();\r\n\r\n    OnShowUserdetails(user: User){\r\n        this.OnUserDetailsClicked.emit(user)\r\n    }\r\n\r\n    GetAllUsers(){\r\n        return this.users;\r\n    }\r\n\r\n    CreateUser(name: string,gender: string,subType: string,status: string){\r\n        let user = new User(name,gender,subType,status);\r\n        this.users.push(user);\r\n       // let logger= new LoggerServive();\r\n        this.logger.LogMessage(name,status)\r\n    }\r\n}"],"mappings":";AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,eAAe;AAExD,SAASC,IAAI,QAAQ,gBAAgB;AAGrC,IAAaC,WAAW,GAAxB,MAAaA,WAAW;EAOpBC,YAAoBC,MAAqB;IAArB,KAAAA,MAAM,GAANA,MAAM;IAN1B,KAAAC,KAAK,GAAU,CACX,IAAIJ,IAAI,CAAC,aAAa,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,CAAC,EACjD,IAAIA,IAAI,CAAC,WAAW,EAAC,QAAQ,EAAC,QAAQ,EAAC,UAAU,CAAC,EAClD,IAAIA,IAAI,CAAC,YAAY,EAAC,MAAM,EAAC,WAAW,EAAC,QAAQ,CAAC,CACrD;IAID,KAAAK,oBAAoB,GAAuB,IAAIP,YAAY,EAAQ;EAFxB;EAI3CQ,iBAAiBA,CAACC,IAAU;IACxB,IAAI,CAACF,oBAAoB,CAACG,IAAI,CAACD,IAAI,CAAC;EACxC;EAEAE,WAAWA,CAAA;IACP,OAAO,IAAI,CAACL,KAAK;EACrB;EAEAM,UAAUA,CAACC,IAAY,EAACC,MAAc,EAACC,OAAe,EAACC,MAAc;IACjE,IAAIP,IAAI,GAAG,IAAIP,IAAI,CAACW,IAAI,EAACC,MAAM,EAACC,OAAO,EAACC,MAAM,CAAC;IAC/C,IAAI,CAACV,KAAK,CAACW,IAAI,CAACR,IAAI,CAAC;IACtB;IACC,IAAI,CAACJ,MAAM,CAACa,UAAU,CAACL,IAAI,EAACG,MAAM,CAAC;EACvC;CACH;AAzBYb,WAAW,GAAAgB,UAAA,EADvBlB,UAAU,EAAE,C,EACAE,WAAW,CAyBvB;SAzBYA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}